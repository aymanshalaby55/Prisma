// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String         @unique
  email         String         @unique
  role          Role           @default(USER)
  writtingPost  Post[]         @relation("WrittenPosts")
  favoritePost  Post[]         @relation("FavouritePosts")
  age           Int
  userPrefrence UserPrefrence?

  @@unique([age, name])
  @@index([email])
}

model UserPrefrence {
  id           String  @id @default(uuid())
  userId       String?  @unique
  emailUpdates Boolean
  user         User?    @relation(fields: [userId], references: [id])
}

model Post {
  // id            Int        @id @default(autoincrement())
  title         String
  averageRating Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  auther        User     @relation("WrittenPosts", fields: [auhterId], references: [id])
  auhterId      String
  favoriteBy    User?    @relation("FavouritePosts", fields: [favoriteById], references: [id])
  favoriteById  String?

  @@id([title, auhterId])
}

model Category {
  id String @id @default(uuid())
}

enum Role {
  ADMIN
  USER
  EDITE
}
